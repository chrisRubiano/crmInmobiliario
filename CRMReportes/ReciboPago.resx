<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="dsPago.SelectCommand" xml:space="preserve">
    <value>SELECT Desarrollos.Desarrollo, Propiedades.IdPropiedad, Propiedades.Titulo, Propiedades.VentaPrecio, Propiedades.Codigo, Propiedades.Bodega, Propiedades.M2Bodega, Propiedades.FrenteLocal, Propiedades.LargoLocal, Propiedades.Nivel, Propiedades.Estacionamiento, 
             Propiedades.CajonesEstacionamiento, Personas.Nombre, Personas.Paterno, Personas.Materno, Personas.RFC, Personas.Email, Personas.Email2, Personas.Telefono, Personas.Celular, Pagos.Importe, Pagos.FechaPago, Pagos.ImporteConLetra
FROM   Pagos INNER JOIN
             Propiedades ON Pagos.Propiedad = Propiedades.IdPropiedad INNER JOIN
             Personas ON Pagos.Persona = Personas.IdPersona LEFT OUTER JOIN
             Amortizaciones ON Pagos.Amortizacion = Amortizaciones.IdAmortizacion LEFT OUTER JOIN
             Desarrollos ON Propiedades.Desarrollo = Desarrollos.IdDesarrollo
WHERE (Pagos.IdPago = @IdPago)</value>
  </data>
</root>