@model crmInmobiliario.Models.Desarrollos

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Datos de Desarrollo</h2>

@using (Html.BeginForm("Edit", "Desarrollos", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdDesarrollo)

        <div class="form-group">
            @Html.LabelFor(model => model.Desarrollo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Desarrollo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desarrollo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <div class="">
                    Si @Html.RadioButtonFor(model => model.Activo, true)
                    No @Html.RadioButtonFor(model => model.Activo, false)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Descuento, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Descuento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descuento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CajonesEstacionamiento, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CajonesEstacionamiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CajonesEstacionamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ERP, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ERP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ERP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEntrega, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FechaEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaEntrega, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.HiddenFor(model => model.Logo)
                @if (Model.Logo == null)
                {
                    <img src="#" alt="Logo" class="img-thumbnail" />
                }
                else
                {
                    var base64 = Convert.ToBase64String(Model.Logo);

                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    <img src="@imgSrc" alt="Logo" class="  img-thumbnail" />
                }
                <input name="imgLogo" id="imgLogo" type="file" class="input-file" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-success" type="submit"><i class="fa fa-save"></i> Guardar</button>
            </div>
        </div>
    </div>
}


<div>
    <button class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Desarrollos")';return false;"><i class="fa fa-chevron-left"></i> Volver</button>
</div>

